#!/bin/bash
#
# This script is executed whenever your appliance boots.  Here you can add
# commands to be executed before the system enters the first runlevel.  This
# could include loading kernel modules, starting daemons that aren't managed
# by init files, asking questions at the console, etc.
#
# The 'kiwi_type' variable will contain the format of the appliance (oem =
# disk image, vmx = VMware, iso = CD/DVD, xen = Xen).
#

# read in some variables
. /studio/profile

# Put commands to be run on every boot here.

warn () {
    cat <<EOF >&2
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

EOF
    cat >&2
    cat <<EOF >&2

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
EOF
}

if [ -f /etc/init.d/suse_studio_firstboot ]
then
    # Put commands to be run only on the first boot of your appliance here
    # (suse_studio_firstboot gets deleted upon successful completion)
    echo "Running SUSE Studio first boot script..."

    cd /var/lib/firstboot
    for script in provision-root-files.sh prep-admin.sh; do
        if ! ./$script; then
            warn <<EOF
WARNING: /var/lib/firstboot/$script failed.
Will attempt to continue in 60 seconds anyway ...
EOF
            sleep 60
        fi
    done

    # Reduce grub prompt time-out
    sed -i 's/^timeout [0-9]\+/timeout 3/' /boot/grub/menu.lst

    if [ -f /tmp/VBoxLinuxAdditions.run ]; then
        echo "Installing VirtualBox guest additions ..."
        sh /tmp/VBoxLinuxAdditions.run
        # Unfortunately the return code can be non-zero even when
        # it worked.
        if lsmod | grep vbox; then
            echo "VirtualBox guest additions installed!"
            echo "Removing kernel source and headers ..."
            rpm -e kernel-default-devel kernel-source
        else
            warn <<EOF
WARNING: VirtualBox guest additions failed to install.
Probably worth checking /var/log/vboxadd-install.log.
EOF
        fi
    else
        echo "/tmp/VBoxLinuxAdditions.run not present; won't install VirtualBox guest additions."
    fi
fi

#!/bin/bash
#
# This script is executed whenever your appliance boots.  Here you can add
# commands to be executed before the system enters the first runlevel.  This
# could include loading kernel modules, starting daemons that aren't managed
# by init files, asking questions at the console, etc.
#
# The 'kiwi_type' variable will contain the format of the appliance (oem =
# disk image, vmx = VMware, iso = CD/DVD, xen = Xen).
#

# read in some variables
. /studio/profile

# Put commands to be run on every boot here.

if [ -f /etc/init.d/suse_studio_firstboot ]
then
    # Put commands to be run only on the first boot of your appliance here
    # (suse_studio_firstboot gets deleted upon successful completion)
    echo "Running SUSE Studio first boot script..."
    
    # go script bits
    export PATH="$PATH:/sbin:/usr/sbin/"

    # atftp required at build-time for oemboot/suse-SLES11 bug
    # but conflicts with tftp crowbar wants
    zypper -n rm atftp

    mv /tmp/crowbar_batch /tmp/barclamp_lib.rb /opt/dell/bin
    gem install /tmp/easy_diff-0.0.3.gem

    cd /opt/dell

    patch -p1 < /tmp/fix-chef-client-when-cluster-down.patch
    patch -p1 < /tmp/allow-disabled-STONITH.patch
    /opt/dell/bin/barclamp_install.rb --rpm pacemaker

    patch -p1 < /tmp/database.patch
    /opt/dell/bin/barclamp_install.rb --rpm database

    patch -p1 < /tmp/fix-crowbar_register.patch
    mkdir -p /nfs/{postgresql,rabbitmq}
    echo '/nfs <%= @admin_subnet %>/<%= @admin_netmask %>(rw,async,no_root_squash,no_subtree_check)' >> /opt/dell/chef/cookbooks/nfs-server/templates/default/exports.erb
    /opt/dell/bin/barclamp_install.rb --rpm provisioner

    sed -i 's/#resume_guests_state_on_host_boot=false/resume_guests_state_on_host_boot=true/' /opt/dell/chef/cookbooks/nova/templates/default/nova.conf.erb
    /opt/dell/bin/barclamp_install.rb --rpm nova

    /tmp/prep-admin.sh

    # Reduce grub prompt time-out
    sed -i 's/^timeout [0-9]\+/timeout 3/' /boot/grub/menu.lst

    if [ -f /tmp/VBoxLinuxAdditions.run ]; then
        echo "Installing VirtualBox guest additions ..."
        sh /tmp/VBoxLinuxAdditions.run
        # Unfortunately the return code can be non-zero even when
        # it worked.
        if lsmod | grep vbox; then
            echo "VirtualBox guest additions installed!"
            echo "Removing kernel source and headers ..."
            rpm -e kernel-default-devel kernel-source
        else
            cat <<EOF >&2
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

WARNING: VirtualBox guest additions failed to install.
Probably worth checking /var/log/vboxadd-install.log.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
EOF
        fi
    else
        echo "/tmp/VBoxLinuxAdditions.run not present; won't install VirtualBox guest additions."
    fi
fi

#!/bin/bash -e
#
# This script is executed at the end of appliance creation.  Here you can do
# one-time actions to modify your appliance before it is ever used, like
# removing files and directories to make it smaller, creating symlinks,
# generating indexes, etc.
#
# The 'kiwi_type' variable will contain the format of the appliance
# (oem = disk image, vmx = VMware, iso = CD/DVD, xen = Xen).
#

# read in some variables
if test -f /studio/profile; then
    . /studio/profile
fi

# read in KIWI utility functions
if test -f /.kconfig; then
    . /.kconfig
fi

die () {
    echo >&2 "$*"
    exit 1
}

if ! long_hostname="`cat /etc/HOSTNAME`"; then
    die "Failed to determine hostname"
fi
short_hostname="${long_hostname%%.*}"
if [ "$short_hostname" = "$long_hostname" ]; then
    die "Failed to determine FQDN for hostname ($short_hostname)"
fi
ADMIN_IP=192.168.124.10
if ! grep -q "^$ADMIN_IP " /etc/hosts; then
    echo "$ADMIN_IP   $long_hostname $short_hostname" >> /etc/hosts
fi

echo "Enabling auto-start of ntp and ssh services on boot ..."
chkconfig ntp on
chkconfig sshd on

if grep -q '^vagrant:' /etc/passwd; then
    echo "Adding vagrant to sudoers"
    cat <<EOF >>/etc/sudoers

vagrant ALL=(ALL) NOPASSWD: ALL
EOF
    # Ensure vagrant maintains password-less sudo access even after
    # Crowbar/Chef hijack /etc/sudoers:
    echo "Adding vagrant to sysadmins..."
    groupadd sysadmin
    usermod -G sysadmin vagrant
fi

# This avoids annoyingly long timeouts on reverse DNS
# lookups when connecting via ssh.
echo "Disabling UseDNS in sshd ..."
sed -i 's/^#\?UseDNS.*/UseDNS no/' /etc/ssh/sshd_config

# Default behaviour of less drives me nuts!
sed -i 's/\(LESS="\)/\1-X /' /etc/profile

echo "Setting up zypper repos ..."

# -K disables local caching of rpm files, since they are already local
# to the VM (or at least to its host in the NFS / synced folders cases),
# so caching would just unnecessarily bloat the VM.
#
# -G disables GPG check for the repository.
zypper ar -G -K -t yast2  file:///srv/tftpboot/suse-11.3/install SLES-11-SP3
#zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/SLES11-SP3-Updates SLES-11-SP3-Updates

# We don't expect to install anything new from the SDK after booting up the appliance
# zypper ar -G -K -t yast2  file:///srv/tftpboot/suse-11.3/repos/SLE-11-SP3-SDK SLE11-SP3-SDK
# zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/SLE-11-SP3-SDK-Updates SLE11-SP3-SDK-Updates

zypper ar -G -K -t yast2  file:///srv/tftpboot/suse-11.3/repos/Cloud SUSE-Cloud
# Not needed since we have the installation media above:
# zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/SUSE-Cloud-5-Pool SUSE-Cloud-5-Pool
# Not needed since we're using a Devel:Cloud:5:Staging .iso:
# zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/SUSE-Cloud-5-Updates SUSE-Cloud-5-Updates

# zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/Devel:Cloud:Shared:11-SP3 Devel_Cloud_Shared_11-SP3
# zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/Devel:Cloud:5 Devel_Cloud_5
# zypper ar -G -K -t rpm-md file:///srv/tftpboot/suse-11.3/repos/Devel:Cloud:5:Staging Devel_Cloud_5_Staging
